package com.acron.device;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.apache.log4j.BasicConfigurator;

import com.sybase.sup.admin.client.SUPApplication;
import com.sybase.sup.admin.client.SUPDomain;
import com.sybase.sup.admin.client.SUPMobileWorkflow;
import com.sybase.sup.admin.client.SUPObjectFactory;
import com.sybase.sup.admin.client.SUPServer;
import com.sybase.sup.admin.context.AgentContext;
import com.sybase.sup.admin.context.ClusterContext;
import com.sybase.sup.admin.context.DomainContext;
import com.sybase.sup.admin.context.ServerContext;
import com.sybase.sup.admin.enumeration.application.APPCONNECTION;
import com.sybase.sup.admin.exception.SUPAdminException;
import com.sybase.sup.admin.filter.FilterExpression;
import com.sybase.sup.admin.vo.PaginationResult;
import com.sybase.sup.admin.vo.application.ApplicationConnectionVO;
import com.sybase.sup.admin.vo.application.filter.AppConnectionFilterSortVO;
import com.sybase.sup.admin.vo.messaging.DeviceMobileWorkflowStatusVO;
import com.sybase.sup.admin.vo.messaging.MobileWorkflowVO;

public class deviceList {
	//private final static String mHost		= "app.webnak.com.tr";
	//"relay.aslanoba.com"
	private final static String mHost		= "relay.aslanoba.com";
	private final static int	mAgentPort	= 9999;
	private final static int	mMngPort	= 2000;
	private final static String mUsername	= "alperkarabulut" ;
	private final static String mPassword 	= "06111984";
	private final static long 	mTimeout	= 120;
	/**
	 * @param args
	 * @throws SUPAdminException 
	 * @throws InterruptedException 
	 */
	public static void main(String[] args) throws SUPAdminException, InterruptedException {
		BasicConfigurator.configure();
		
		AgentContext agentContext = new AgentContext(mHost, mAgentPort, mUsername, mPassword);
		ServerContext serverContext = new ServerContext(mHost, mMngPort, mUsername, mPassword,false, agentContext);
		ClusterContext clusterContext = serverContext.getClusterContext("relay");
		SUPServer server = SUPObjectFactory.getSUPServer(serverContext);
		SUPDomain domain = SUPObjectFactory.getSUPDomain(new DomainContext(serverContext.getClusterContext("relay"), "default"));
		SUPApplication app = SUPObjectFactory.getSUPApplication(clusterContext);
		SUPMobileWorkflow mobileWorkflow = SUPObjectFactory.getSUPMobileWorkflow(clusterContext);
		//app.getMobileWorkflowList()
		
		
		
		for (MobileWorkflowVO wf : mobileWorkflow.getMobileWorkflowList()) {
			if( wf.getDisplayName().equals("Webnak") ){
				System.out.println( wf.getDisplayName() + " : " + wf.getID() );
				List<DeviceMobileWorkflowStatusVO> deviceList = mobileWorkflow.getDeviceMobileWorkflowStatus( wf.getID() );
				List<Integer> devList = new ArrayList<Integer>();
				for( DeviceMobileWorkflowStatusVO device : deviceList){
					//System.out.println( "Name: " + device.getDeviceName() + " Error Count:" + device.getErrorCount()  + " Device ID: " + device.getDeviceName() + " Transform Queue Count:" + device.getTransformQueueCount() + " - " + device.getTransformQueueStatus() + " Response Queue Count:" + device.getReponseQueueCount() + " - " + device.getResponseQueueStatus());
					devList.add(device.getDeviceID());
				}
				//mobileWorkflow.unassignMobileWorkflowFromDevices(wf.getID(), devList);
				//mobileWorkflow.assignMobileWorkflowToDevices( wf.getID(), devList);
				System.out.println( wf.getDisplayName() + " uygulaması, " +  devList.size() + " adet cihazda tanımlı.");
			}
		}
		AppConnectionFilterSortVO filter = new AppConnectionFilterSortVO();
		filter.setSortField(APPCONNECTION.APPLICATION_CONNECTION_ID);
		filter.setFilterExpression(new FilterExpression<APPCONNECTION>().eq(APPCONNECTION.STATUS, "2"));
		
		PaginationResult<ApplicationConnectionVO> appConnectionResult = app.getApplicationConnections( filter , 0L, 99999);
		
//		Collection<Integer> offlineDevices = new ArrayList<Integer>();
//		Collection<Integer> removeDevices = new ArrayList<Integer>();
		ApplicationConnectionVO bufferAppConn = null;
		for (ApplicationConnectionVO appConn : appConnectionResult.getItems()) {
			//System.out.println("Device ID: " + appConn.getId() + " Status: " + appConn.getStatus() + " Pending Items: " + appConn.getPendingItems());
			
			//	Offline olan tüm cihazlardan Webnak uygulamasını kaldır.
			if( bufferAppConn != null ){
				if( bufferAppConn.getId().equals(appConn.getId()) && appConn.getStatus().equals(3) && appConn.getPendingItems() > 0 ){
//					removeDevices.add(appConn.getNumericId());
				}
			}
			if( appConn.getStatus().equals(3) && appConn.getPendingItems() > 0){
//				offlineDevices.add(appConn.getNumericId());
				System.out.println("Device ID: " + appConn.getId() + " Status: " + appConn.getStatus() + " Pending Items: " + appConn.getPendingItems());
			}else if ( appConn.getStatus().equals(2) ) {
				System.out.println("Device ID: " + appConn.getId() + " Status: " + appConn.getStatus() + " Pending Items: " + appConn.getPendingItems());
			}
			bufferAppConn = appConn; 
		}
		
		// Çifte kayıtlı cihaz idlerinin silinmesi
//		if( removeDevices.size() > 0){
//			System.out.println(removeDevices.size() + " adet cihaz silindi");
//			//app.deleteApplicationConnections(removeDevices);
//		}
		
		//	Offline olan cihazlardan Webnak uygulaması silinecek.
		
		
		
		//app.deleteApplicationConnections(offlineDevices);
		
		//app.assignMobileWorkflowToDevices(workflowID, deviceIDs)
		
		//SUPApplication app = SUPObjectFactory.getSUPApplication(clusterContext);

		SUPObjectFactory.shutdown();
		
		
	}

}
